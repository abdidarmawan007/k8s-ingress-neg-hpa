apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: zeus
  name: production-frontend
spec:
  replicas: 1
  revisionHistoryLimit: 5
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: production-frontend 
  template:
    metadata:
      labels:
        app: production-frontend
        env: production
    spec:
      containers:
      - name: production-frontend
        image: nginxdemos/nginx-hello:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
            requests:
               cpu: "100m"
               memory: "200Mi"
            limits:
               cpu: "500m"
               memory: "600Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 8
        livenessProbe:
           httpGet:
             path: /
             port: 8080
           initialDelaySeconds: 15
           periodSeconds: 8
        lifecycle: # zero-downtime for rolling deployment
          preStop:
            exec:
              command: ["sh", "-c", "sleep 8"]      
---
# service
apiVersion: v1
kind: Service
metadata:
  namespace: production
  name: production-frontend
  annotations:
    cloud.google.com/neg: '{"ingress": true}' # Creates an NEG native LB Container after an Ingress is created
    cloud.google.com/backend-config: '{"ports": {"80":"production-frontend"}}'
  labels:
    app: production-frontend
spec:
  type: ClusterIP
  selector:
    app: production-frontend
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
---
# hpa
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: production
  name: production-frontend
spec:
  maxReplicas: 25
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: production-frontend
  targetCPUUtilizationPercentage: 70
---
# backendconfig
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  namespace: production
  name: production-frontend
spec:
  timeoutSec: 40
  connectionDraining:
    drainingTimeoutSec: 60
  logging:
    enable: false # enable = true
    #sampleRate: 0.5
---
# frontendconfig 
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
 namespace: production
 name: production-frontend
spec:
 sslPolicy: gke-ingress-ssl-policy #SSL policies
 redirectToHttps:
   enabled: true
   responseCodeName: MOVED_PERMANENTLY_DEFAULT
---
# ingress gce
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: production
  name: production-frontend
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "production-frontend"  # config for global static IP public
    networking.gke.io/managed-certificates: "production-managed-cert-1"
    networking.gke.io/v1beta1.FrontendConfig: "production-frontend"
spec:
  rules:
    - host: "abdi-test.lemonilo.com"
      http:
        paths:
        - path: "/*"
          pathType: ImplementationSpecific # (Exact,Prefix or ImplementationSpecific)
          backend:
            service:
              name: production-frontend
              port:
                number: 8080
